# названия обучающией и тестовой выборок в настройки
DATASETS:
  TRAIN:
  - "metric_book_dataset_train"
  TEST:
  - "metric_book_dataset_val"

INPUT:
  # Часто имеет смысл сделать изображения чуть меньшего размера, чтобы
  # обучение происходило быстрее. Поэтому мы можем указать размер, до которого будем изменяться наименьшая
  # и наибольшая из сторон исходного изображения.
  MIN_SIZE_TRAIN: 
  - 1200
  MAX_SIZE_TRAIN: 1200

  # Также мы должны указать порядок каналов во входном изображении. Обратите внимание, что это Blue Green Red (BGR),
  # а не привычный RGB. Это особенности работы данной модели.
  FORMAT: 'BGR'

MODEL:
  DEVICE: "cpu"
  ROI_HEADS:
    # Укажем количество классов в нашей выборке
    NUM_CLASSES: 1

    # Также мы должны сказать модели ниже какой вероятности определения она игнорирует результат.
    # То есть, если она найдет на картинке еду, но вероятность правильного определения ниже 0.5,
    # то она не будет нам сообщать, что она что-то нашла.
    SCORE_THRESH_TEST: 0.5

DATALOADER:
  # Для более быстрой загрузки данных в модель, мы делаем параллельную загрузку. Мы указываем параметр 4,
  NUM_WORKERS: 4

SOLVER:
  # Следующий параметр задает количество изображений в батче, на котором
  # модель делает одну итерацию обучения (изменения весов).
  IMS_PER_BATCH: 14

  # Зададим также learning_rate
  BASE_LR: 0.01

  # Укажем модели, через сколько шагов обучения модели следует уменьшить learning rate
  STEPS:
  - 1500

  # Фактор, на который уменьшается learning rate задается следующим выражением
  GAMMA: 0.1

  # Зададим общее число итераций обучения.
  MAX_ITER: 6000

  # Задаем через сколько  шагов обучения сохранять веса модели в файл. Этот файл мы сможем загрузить потом
  # для тестирования нашей обученной модели на новых данных.
  CHECKPOINT_PERIOD: 1000